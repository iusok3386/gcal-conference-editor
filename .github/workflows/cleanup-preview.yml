name: Cleanup Preview Deployments

on:
  pull_request:
    types: [closed]

permissions:
  contents: write
  pull-requests: write # Required for deleting comments

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Create .clasprc.json
        run: echo '${{ secrets.CLASPRC_JSON }}' > ~/.clasprc.json

      - name: Create .clasp.json
        run: sed 's/__SCRIPT_ID__/${{ secrets.PREVIEW_SCRIPT_ID }}/g' .clasp.json.template > .clasp.json

      - name: Find deployment comment
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- PREVIEW_DEPLOYMENT_COMMENT -->'

      - name: Extract deployment ID from comment
        id: extract_deployment_id
        if: steps.find_comment.outputs.comment-id != ''
        env:
          COMMENT_BODY: ${{ steps.find_comment.outputs.comment-body }}
        run: |
          # Use grep and sed for robust parsing, avoiding bash regex issues.
          id_line=$(echo "$COMMENT_BODY" | grep '<!-- DEPLOYMENT_ID:')
          if [[ -n "$id_line" ]]; then
            deployment_id=$(echo "$id_line" | sed -n 's/.*<!-- DEPLOYMENT_ID: \(.*\) -->.*/\1/p')
            if [[ -n "$deployment_id" ]]; then
              echo "Found deployment ID to delete: $deployment_id"
              echo "deployment_id=$deployment_id" >> "$GITHUB_OUTPUT"
            else
              echo "Could not extract deployment ID with sed."
              echo "deployment_id=" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "No deployment ID found in comment."
            echo "deployment_id=" >> "$GITHUB_OUTPUT"
          fi

      - name: Delete Apps Script deployment
        if: steps.extract_deployment_id.outputs.deployment_id != ''
        run: |
          deployment_id="${{ steps.extract_deployment_id.outputs.deployment_id }}"
          echo "Undeploying deployment $deployment_id..."
          npx clasp undeploy "$deployment_id"

      - name: Delete deployment comment
        if: steps.find_comment.outputs.comment-id != ''
        uses: actions/github-script@v7
        with:
          script: |
            const commentId = ${{ steps.find_comment.outputs.comment-id }};
            console.log(`Attempting to delete comment ID: ${commentId}`);
            await github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: commentId,
            });
            console.log(`Successfully deleted comment ID: ${commentId}`);
