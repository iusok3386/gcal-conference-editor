name: Update Contribution Badge

on:
  workflow_dispatch: # Allow manual trigger
  pull_request:
    branches:
      - main

jobs:
  update-badge:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow to push to the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Calculate contribution
        id: contribution
        run: |
          # Configure git to use the bot's identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Get total number of commits
          TOTAL_COMMITS=$(git rev-list --count HEAD)

          # Get number of commits by Jules
          JULES_COMMITS=$(git log --author="google-labs-jules[bot]" --oneline | wc -l)

          # Calculate percentage
          if [ "$TOTAL_COMMITS" -eq 0 ]; then
            PERCENTAGE=0
          else
            PERCENTAGE=$((JULES_COMMITS * 100 / TOTAL_COMMITS))
          fi
          echo "Total commits: $TOTAL_COMMITS"
          echo "Jules's commits: $JULES_COMMITS"
          echo "Contribution: $PERCENTAGE%"
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT

      - name: Update README.md
        id: update_readme
        run: |
          BADGE_URL="https://img.shields.io/badge/Jules's%20contribution-${{ steps.contribution.outputs.percentage }}%25-715cd7"
          BADGE_MARKDOWN="![Jules's contribution]($BADGE_URL)"

          # Use a marker to replace the badge
          START_MARKER="<!-- JULES-BADGE-START -->"
          END_MARKER="<!-- JULES-BADGE-END -->"

          # Replace the content between the markers
          # Using awk for robust replacement
          # The logic is: when start marker is found, print it, print the new content, and set a flag.
          # When end marker is found, unset the flag and print the line.
          # If the flag is not set, print the line.
          NEW_README_CONTENT=$(awk -v start="$START_MARKER" -v end="$END_MARKER" -v new="$BADGE_MARKDOWN" '
          BEGIN { in_block = 0 }
          $0 == start {
            print $0
            print new
            in_block = 1
            next
          }
          $0 == end {
            in_block = 0
          }
          in_block == 0 {
            print $0
          }
          ' README.md)

          # Write the new content back to README.md
          echo "$NEW_README_CONTENT" > README.md

          # Check if the file was changed
          if git diff --quiet README.md; then
            echo "readme_changed=false" >> $GITHUB_OUTPUT
            echo "README.md not changed."
          else
            echo "readme_changed=true" >> $GITHUB_OUTPUT
            echo "README.md changed."
          fi

      - name: Commit changes
        if: steps.update_readme.outputs.readme_changed == 'true'
        run: |
          git add README.md
          git commit -m "docs: update Jules's contribution badge [skip ci]"
          git push
