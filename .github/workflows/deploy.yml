name: Deploy to Google Apps Script

permissions:
  contents: read
  deployments: write

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy_preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Deployment
        uses: bobheadxi/deployments@v1
        id: create_deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: preview-pr-${{ github.event.number }}
          ref: ${{ github.event.pull_request.head.sha }}
          desc: Deploying preview environment

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install clasp
        run: npm install -g @google/clasp

      - name: Create .clasp.json for Preview
        run: |
          cp .clasp.json.template .clasp.json
          sed -i "s/__SCRIPT_ID__/${{ secrets.PREVIEW_SCRIPT_ID }}/g" .clasp.json

      - name: Create .clasprc.json
        run: echo '${{ secrets.CLASP_RC }}' > ~/.clasprc.json

      - name: Push code to GAS
        run: npx clasp push --force

      - name: Create new deployment
        id: deploy
        run: |
          npx clasp deploy --description "Preview for PR #${{ github.event.number }} - ${{ github.sha }}" > deployment-output.txt
          cat deployment-output.txt
          DEPLOYMENT_ID=$(awk '{print $2}' deployment-output.txt)
          URL="https://script.google.com/macros/s/${DEPLOYMENT_ID}/exec"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Update GitHub Deployment (Success)
        uses: bobheadxi/deployments@v1
        if: success()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: success
          env: ${{ steps.create_deployment.outputs.environment }}
          env_url: ${{ steps.deploy.outputs.url }}
          deployment_id: ${{ steps.create_deployment.outputs.id }}

      - name: Update GitHub Deployment (Failure)
        uses: bobheadxi/deployments@v1
        if: failure() || cancelled()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.create_deployment.outputs.environment }}
          deployment_id: ${{ steps.create_deployment.outputs.id }}

  deploy_production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install clasp
        run: npm install -g @google/clasp

      - name: Create .clasp.json for Production
        run: |
          cp .clasp.json.template .clasp.json
          sed -i "s/__SCRIPT_ID__/${{ secrets.PRODUCTION_SCRIPT_ID }}/g" .clasp.json

      - name: Create .clasprc.json
        run: echo '${{ secrets.CLASP_RC }}' > ~/.clasprc.json

      - name: Push code to GAS
        run: npx clasp push --force

      - name: Update production deployment
        run: npx clasp deploy --deploymentId ${{ secrets.PRODUCTION_DEPLOYMENT_ID }} --description "Production Release ${{ github.sha }}"
