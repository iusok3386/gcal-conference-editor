name: Production Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    env:
      NODE_VERSION: '22'
      CLASP_RC: ${{ secrets.CLASP_RC }}
      CLASP_JSON: ${{ secrets.CLASP_PROD_JSON }}
      PROD_DEPLOYMENT_ID: ${{ secrets.PROD_DEPLOYMENT_ID }}
    steps:
      - name: Create deployment status (pending)
        uses: actions/deployment-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: 'in_progress'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Setup clasp
        run: |
          echo "$CLASP_RC" > ~/.clasprc.json
          echo "$CLASP_JSON" > ./.clasp.json

      - name: Build and Push
        run: |
          npm run build
          ncp appsscript.json dist/appsscript.json
          npm run build-ui
          node deploy-ui.mjs
          npx @google/clasp push -f

      - name: Deploy to GAS
        id: deploy
        run: |
          echo "Updating production deployment: ${{ env.PROD_DEPLOYMENT_ID }}"
          npx @google/clasp deploy -i "${{ env.PROD_DEPLOYMENT_ID }}" -d "Production Deployment" > deploy_output.txt
          cat deploy_output.txt
          URL=$(grep -o 'https://script.google.com/macros/s/.*/exec' deploy_output.txt)
          echo "url=$URL" >> $GITHUB_OUTPUT
          if [ -z "$URL" ]; then
            echo "Failed to get deployment URL"
            exit 1
          fi

      - name: Update deployment status (success)
        if: success()
        uses: actions/deployment-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          environment_url: ${{ steps.deploy.outputs.url }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: 'success'

      - name: Update deployment status (failure)
        if: failure() || cancelled()
        uses: actions/deployment-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: 'failure'
